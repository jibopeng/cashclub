<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.loansupermarketcommon.mapper.LoginMapper">
    <!--返回Map-->
    <resultMap id="BaseResultMap" type="com.example.loansupermarketcommon.entity.Sms">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="sendTime" property="sendTime"/>
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="respTime" property="respTime"/>
        <result column="respContent" property="respContent" jdbcType="VARCHAR" />
        <result column="smsType" property="smsType" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="verifyTime" property="verifyTime" jdbcType="VARCHAR" />
    </resultMap>

    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id, phone, sendTime, content, respTime, respContent, smsType, code, orderNo, state, verifyTime
    </sql>

    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id !='' and id !=null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId !='' and userId !=null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="amount !='' and amount !=null">
                and amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="realAmount !='' and realAmount !=null">
                and real_amount = #{realAmount,jdbcType=DECIMAL}
            </if>
            <if test="fee !='' and fee !=null">
                and fee = #{fee,jdbcType=DECIMAL}
            </if>
            <if test="createTime !=null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="timeLimit !='' and timeLimit !=null">
                and time_limit = #{timeLimit,jdbcType=VARCHAR}
            </if>
            <if test="state !='' and state !=null">
                and state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="accountId !='' and accountId !=null">
                and account_id = #{accountId,jdbcType=BIGINT}
            </if>

            <if test="interest !='' and interest !=null">
                and interest = #{interest,jdbcType=DECIMAL}
            </if>
            <if test="client !='' and client !=null">
                and client = #{client,jdbcType=VARCHAR}
            </if>
            <if test="remark !=null and remark !=''">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>


    <insert id="save" parameterType="com.example.loansupermarketcommon.entity.Sms">
        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        insert into cl_borrow(user_id,order_no,amount,real_amount,fee,create_time,time_limit,state,account_id,interest,client,remark)values(#{userId,jdbcType=BIGINT},#{orderNo,jdbcType=VARCHAR},#{amount,jdbcType=DECIMAL},#{realAmount,jdbcType=DECIMAL},#{fee,jdbcType=DECIMAL},#{createTime,jdbcType=TIMESTAMP},#{timeLimit,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{accountId,jdbcType=BIGINT},#{interest,jdbcType=DECIMAL},#{client,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR})
    </insert>


    <update id="update" parameterType="com.example.loansupermarketcommon.entity.Sms">
        update cl_borrow set
        user_id = #{userId,jdbcType=BIGINT},
        order_no = #{orderNo,jdbcType=VARCHAR},
        amount = #{amount,jdbcType=DECIMAL},
        real_amount = #{realAmount,jdbcType=DECIMAL},
        fee = #{fee,jdbcType=DECIMAL},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        time_limit = #{timeLimit,jdbcType=VARCHAR},
        state = #{state,jdbcType=VARCHAR},
        account_id = #{accountId,jdbcType=BIGINT},
        interest = #{interest,jdbcType=DECIMAL},
        client = #{client,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR}
        where id = #{id ,jdbcType=BIGINT}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_borrow
        <set>
            <if test="userId != null and userId != '' ">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null and orderNo != '' ">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="amount != null and amount != '' ">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="realAmount != null and realAmount != '' ">
                real_amount = #{realAmount,jdbcType=DECIMAL},
            </if>
            <if test="fee != null and fee != '' ">
                fee = #{fee,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null ">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeLimit != null and timeLimit != '' ">
                time_limit = #{timeLimit,jdbcType=VARCHAR},
            </if>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="accountId != null and accountId != '' ">
                account_id = #{accountId,jdbcType=BIGINT},
            </if>
            <if test="interest != null and interest != '' ">
                interest = #{interest,jdbcType=DECIMAL},
            </if>
            <if test="client != null and client != '' ">
                client = #{client,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark,jdbcType=VARCHAR},
            </if>

        </set>
        where id = #{id ,jdbcType=BIGINT}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <include refid="searchBy"/>
    </select>

    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <include refid="searchBy"/>
    </select>

    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchConditions">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id !=null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="orderNo != null and orderNo != ''">
                and order_no like CONCAT('%', #{orderNo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="userName != null and userName != ''">
                and user_name like CONCAT('%', #{userName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="realName != null and realName != ''">
                and real_name like CONCAT('%', #{realName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="phone != null and phone != ''">
                and phone like CONCAT('%', #{phone,jdbcType=VARCHAR}, '%')
            </if>
            <if test="state !=null and state != ''">
                and state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="remark !=null and remark != ''">
                and remark like CONCAT('%', #{remark,jdbcType=VARCHAR}, '%')
            </if>

        </trim>
    </sql>

    <select id="judge_login" resultType="java.lang.Integer" parameterType="java.lang.String">
        select
            count(*)
        from
            USER u
        where
            u.phone = #{phone}
    </select>


</mapper>
